ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .001, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.01, textcolor='red', barcolor='red')
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .001, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.015, textcolor='red', barcolor='red')
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .001, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.01, textcolor='red', barcolor='red')
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .001, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.001, textcolor='red', barcolor='red')
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red')
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale()
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + theme_tree2()
ggtree(rooted_tree) + geom_tiplab() + geom_cladelabel(node=16, label="M Clade", color="red2", offset=.8, align=TRUE) + geom_cladelabel(node=11, label="S Clade", color="purple", offset=.8, align=TRUE) + theme_tree2() + xlim(0, 0.04)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + theme_tree2()
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_scale()
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale()
#tree <- read.iqtree("/Users/matt/desktop/gcf.txt")
tree <- read.tree("/Users/matt/desktop/no_bl.txt")
rooted_tree = midpoint.root(tree)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale()
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.05)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.005)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.5)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.05)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.1)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.15)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.08)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.005)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.001)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.05)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.09)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.01)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.02)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.03)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
#tree <- read.iqtree("/Users/matt/desktop/gcf.txt")
tree <- read.tree("/Users/matt/desktop/no_bl.txt")
rooted_tree = midpoint.root(tree)
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
tree <- read.tree("/Users/matt/desktop/no_bl.txt")
rooted_tree = midpoint.root(tree)
ggtree(rooted_tree)
rooted_tree
ggtree(rooted_tree, ladderize=FALSE) + geom_text(aes(label=node), hjust=-.3) + geom_treescale()
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
treetext = "(((ADH2:0.1[&&NHX:S=human], ADH1:0.11[&&NHX:S=human]):
0.05 [&&NHX:S=primates:D=Y:B=100],ADHY:
0.1[&&NHX:S=nematode],ADHX:0.12 [&&NHX:S=insect]):
0.1[&&NHX:S=metazoa:D=N],(ADH4:0.09[&&NHX:S=yeast],
ADH3:0.13[&&NHX:S=yeast], ADH2:0.12[&&NHX:S=yeast],
ADH1:0.11[&&NHX:S=yeast]):0.1[&&NHX:S=Fungi])[&&NHX:D=N];"
tree <- read.nhx(textConnection(treetext))
midpoint.root(tree)
as.hclust.treedata(tree)
tree <- read.iqtree("/Users/matt/desktop/gcf.txt")
tree
get.fields(tree)
tree_data <- read.iqtree("/Users/matt/desktop/gcf.txt")
ggtree(rooted_tree, ladderize=FALSE) %<+% df_inode_data + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
ggtree(rooted_tree, ladderize=FALSE) %<+% tree_data + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
View(tree_data)
tree_data
print(n = 20)
print(tree_data, n = 20)
print(tree_data, n = 30)
df <- data.frame(node = c(11, 12, 13, 14, 15, 16),
label = c("100/26.6/37.4", "100/25.2/35.8", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
print (df)
ggtree(rooted_tree, ladderize=FALSE) %<+% df + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
rlang::last_error()
View(rooted_tree)
df <- data.frame(edge = c(11, 12, 13, 14, 15, 16),
label = c("100/26.6/37.4", "100/25.2/35.8", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
print (df)
ggtree(rooted_tree, ladderize=FALSE) %<+% df + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
library(ggimage)
packages.install("ggimage")
df_tip_data
packages.install("TDbook")
install.packages("TDbook")
df_tip_data
install.packages("ggimage")
df_tip_data
library(TDbook)
df_inode_data
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
figure %<+% df +  geom_label(aes(label = label.y)
figure %<+% df +  geom_label(aes(label = label.y))
figure <- ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
figure %<+% df +  geom_label(aes(label = label.y))
figure %<+% df +  geom_label(aes(label = label))
df_tip_data
df_inode_data
df <- data.frame(edge = c(1, 2, 3, 4, 5, 6),
label = c("100/26.6/37.4", "100/25.2/35.8", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
figure %<+% df +  geom_label(aes(label = label))
df
rlang::last_error()
rlang::last_trace()
df <- data.frame(edge = c(11, 12, 13, 14, 15, 16),
label = c("dog", "cat", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
figure %<+% df +  geom_label(aes(label = label.y))
df
df_inode_data
df <- data.frame(edge = c(11, 12, 13, 14, 15, 16),
values = c("dog", "cat", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
figure %<+% df +  geom_label(aes(label = label.y))
figure %<+% df +  geom_label(aes(label = values))
df <- data.frame(edge = c("11", "12", "13", "14", "15", "16"),
values = c("dog", "cat", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
figure %<+% df +  geom_label(aes(label = values))
View(figure)
figure[["labels"]]
View(tree_data)
View(rooted_tree)
rooted_tree[["edge"]]
df <- data.frame(edge = c("11", "12", "13", "14", "15", "16"),
values = c("100/26.6/37.4", "100/25.2/35.8", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
figure %<+% df +  geom_label(aes(label = values))
df
figure %<+% df +  geom_label(aes(label = values.y))
figure %<+% df +  geom_label(aes(label = values, fill = posterior))
figure %<+% df +  geom_label(aes(label = values))
figure %<+% df +  geom_label(aes(label = values.y))
df <- data.frame(edge = c(11, 12, 13, 14, 15, 16),
values = c("100/26.6/37.4", "100/25.2/35.8", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
figure %<+% df +  geom_label(aes(label = values.y))
df <- data.frame(edge = c(11, 12, 13, 14, 15, 16),
values = c("100/26.6/37.4", "100/25.2/35.8", "100/66.5/57.9", "100/93.8/79", "100/48.5/40.5", "100/36.1/38"))
figure %<+% df +  geom_label(aes(label = values))
df
figure <- ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
tree <- read.tree("/Users/matt/desktop/no_bl.txt")
rooted_tree = midpoint.root(tree)
ggtree(rooted_tree)
ggtree(rooted_tree, ladderize=FALSE) + geom_text(aes(label=node), hjust=-.3) + geom_treescale()
figure <- ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
figure <- ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
ggtree(rooted_tree)
figure <- ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035)
figure
ggtree(rooted_tree, ladderize=FALSE) + geom_text(aes(label=node), hjust=-.3) + geom_treescale()
tr <- read.newick("/Users/matt/desktop/gcf.txt", node.label='support')
library(phytools)
nwk <- read.nwk()
tr <- read.newick("/Users/matt/desktop/gcf.txt", node.label='support')
nwk <- system.file("/Users/matt/desktop","gcf.txt", package='treeio')
tr <- read.tree(nwk)
tr <- read.tree(nwk)
tr <- read.tree(nwk, node.label="support")
nwk <- system.file("/Users/matt/desktop","gcf.txt", package='treeio')
tr <- read.tree(nwk, node.label='support')
library(phytools)
library(treeio)
read.newick
nwk <- system.file("/Users/matt/desktop/","gcf.txt", package='treeio')
nwk
library(ggtree)
library(phytools)
library(treeio)
#tree_data <- read.iqtree("/Users/matt/desktop/gcf.txt")
#tree_data
tree <- read.tree("/Users/matt/desktop/no_bl.txt")
rooted_tree = midpoint.root(tree)
View(rooted_tree)
tree <- read.tree("/Users/matt/desktop/gcf.txt")
rooted_tree = midpoint.root(tree)
View(rooted_tree)
ggtree(rooted_tree) + geom_text(aes(label=node.label))
ggtree(rooted_tree) + geom_text(aes(x=branch, label=node.labels)
ggtree(rooted_tree) + geom_text(aes(x=branch, label=node.labels))
ggtree(rooted_tree) + geom_text(aes(x=branch, label=node.label))
help(ggtree)
ggtree(rooted_tree) + geom_label(aes(x=branch, label=node.label))
ggtree(rooted_tree) + geom_label(aes(x=branch))
View(rooted_tree)
ggtree(rooted_tree) + geom_label(aes(x=branch, label=rooted_tree$node.label))
ggtree(rooted_tree) + geom_text2(aes(subset = !isTip, label=label))
ggtree(rooted_tree) + geom_text2(aes(label=label))
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
tree <- read.tree("/Users/matt/desktop/gcf.txt")
ggtree(rooted_tree) + geom_text2(aes(label=label))
ggtree(rooted_tree) + geom_text2(aes(subset = !isTip, label=label))
ggtree(rooted_tree) + geom_text2(aes(subset = !isTip))
ggtree(rooted_tree) + geom_text2(aes(label=label))
ggtree(rooted_tree) + geom_text2(aes(label=node.label))
ggtree(rooted_tree) + geom_text2(aes(label=label))
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
tree <- read.tree("/Users/matt/desktop/gcf.txt")
ggtree(rooted_tree) + geom_text2(aes(label=label))
rooted_tree = midpoint.root(tree)
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
tree <- read.tree("/Users/matt/desktop/gcf.txt")
ggtree(rooted_tree)
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
tree <- read.tree("/Users/matt/desktop/gcf.txt")
ggtree(tree)
ggtree(tree) + geom_text2(aes(subset = !isTip, label=label))
rooted_tree = midpoint.root(tree)
ggtree(rooted_tree) + geom_text2(aes(subset = !isTip, label=label))
View(rooted_tree)
rooted_tree
type(rooted_tree)
ape::write.tree(rooted_tree)
tree <- read.tree("/Users/matt/desktop/no_bl.txt")
rooted_tree = midpoint.root(tree)
ape::write.tree(rooted_tree)
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
#tree <- read.tree("/Users/matt/desktop/gcf.txt")
tree <- read.tree("/Users/matt/desktop/gcf2.txt")
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
#tree <- read.tree("/Users/matt/desktop/gcf.txt")
rooted_tree <- read.tree("/Users/matt/desktop/gcf2.txt")
rooted_tree
ggtree(rooted_tree) + geom_text2(aes(subset = !isTip, label=label))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, offset = 0.005))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, offset = 0.5))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=1, vjust=1))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=2, vjust=1))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=1.5, vjust=1))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=1.5, vjust=0.5))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=1.5, vjust=0))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=1.5, vjust=-.5))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=1.2, vjust=-.5))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=0, vjust=-.5))
ggtree(rooted_tree) +
ggtree(rooted_tree, ladderize=FALSE) + geom_text(aes(label=node), hjust=-.3) + geom_treescale()
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
#tree <- read.tree("/Users/matt/desktop/gcf.txt")
rooted_tree <- read.tree("/Users/matt/desktop/gcf2.txt")
rooted_tree
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=0, vjust=-.5))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(label=label, hjust=0, vjust=-.5))
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=0, vjust=-.5))
ggtree(rooted_tree) +
ggtree(rooted_tree, ladderize=FALSE) + geom_text(aes(label=node), hjust=-.3) + geom_treescale()
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
tree <- read.tree("/Users/matt/desktop/gcf.txt")
rooted_tree = midpoint.root(tree)
ggtree(rooted_tree) +
ggtree(rooted_tree, ladderize=FALSE) + geom_text(aes(label=node), hjust=-.3) + geom_treescale()
ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab() + geom_cladelab(node=11, label="S Clade", align=TRUE, offset = .005, textcolor='purple', barcolor='purple') + geom_cladelab(node=16, label="M Clade", align=TRUE, offset = 0.005, textcolor='red', barcolor='red') + geom_treescale() + xlim(0,0.035) + geom_text2(aes(subset = !isTip, label=label, hjust=0, vjust=-.5))
tree <- read.tree("/Users/matt/desktop/no_bl.txt")
rooted_tree = midpoint.root(tree)
ggtree(rooted_tree) +
ggtree(rooted_tree, ladderize=FALSE) + geom_text(aes(label=node), hjust=-.3) + geom_treescale()
ggtree(rooted_tree, ladderize=FALSE) + geom_text(aes(label=node), hjust=-.3) + geom_treescale()
ggtree(rooted_tree, ladderize=FALSE) + geom_text2(aes(subset = !isTip, label=label, hjust=0, vjust=-.5))
#tree <- read.tree("/Users/matt/desktop/no_bl.txt")
#tree <- read.tree("/Users/matt/desktop/gcf.txt")
rooted_tree <- read.tree("/Users/matt/desktop/gcf2.txt")
rooted_tree
ggtree(rooted_tree, ladderize=FALSE) + geom_text2(aes(subset = !isTip, label=label, hjust=0, vjust=-.5))
tree <- read.tree("/Users/matt/desktop/gcf.txt")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("PANTHER.db")
browseVignettes("PANTHER.db")
library(ggplot2)
mytheme <- theme_classic()+ theme(
legend.position = "top", # this makes the axis titles in bold,
axis.line = element_line(color = "black", size = 1.5),
axis.text = element_text(color="black"),
axis.text.x = element_text(angle=45,hjust = 1),
# Makes the axis line black and  thicker
text = element_text(size = 10, face = "bold",color="black")
) # makes all the text larger and bold
theme_set(mytheme)
# Read the bed file
bed_file <- "/Users/matt/desktop/ten_kb_tracts.bed"
genes <- read.table(bed_file, sep = "\t", header = FALSE)
# Rename the columns
colnames(genes) <- c("chromosome", "start", "end", "gene_name")
# Set the order of chromosomes
chromosomes <- c('NW_022145612.1', 'NW_022145594.1', 'NW_022145606.1', 'NW_022145607.1', 'NW_022145611.1', 'NW_022145605.1', 'NW_022145609.1', 'NW_022145613.1', 'NW_022145599.1', 'NW_022145598.1', 'NW_022145600.1', 'NW_022145610.1', 'NW_022145615.1', 'NW_022145601.1', 'NW_022145603.1', 'NW_022145597.1', 'NW_022145604.1', 'NW_022145614.1', 'NW_022145596.1', 'NW_022145602.1', 'NW_022145595.1')
# Create a data frame for plotting
plot_data <- data.frame(chromosome = factor(genes$chromosome, levels = chromosomes),
start = genes$start,
end = genes$end)
# Calculate the midpoint of each interval
plot_data$midpoint <- (plot_data$start + plot_data$end) / 2
# Create the plot
ggplot(plot_data, aes(x = midpoint, y = chromosome, color = "blue")) +
geom_segment(aes(x = start, xend = end, y = chromosome, yend = chromosome), size = 5) +
scale_color_discrete(guide = FALSE) +  # Remove the legend
labs(x = "Position", y = "Chromosome") +
scale_x_continuous(labels = scales::comma) +  # Display x-axis labels without scientific notation
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 10), # Increase font size of axis labels
axis.title = element_text(size = 20)) # Increase font size of axis titles
ggplot(plot_data, aes(x = midpoint, y = chromosome, color = "blue")) +
geom_segment(aes(x = start, xend = end, y = chromosome, yend = chromosome), size = 5) +
scale_color_discrete(guide = none) +  # Remove the legend
labs(x = "Position", y = "Chromosome") +
scale_x_continuous(labels = scales::comma) +  # Display x-axis labels without scientific notation
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 10), # Increase font size of axis labels
axis.title = element_text(size = 20)) # Increase font size of axis titles
ggplot(plot_data, aes(x = midpoint, y = chromosome, color = "blue")) +
geom_segment(aes(x = start, xend = end, y = chromosome, yend = chromosome), size = 5) +
scale_color_discrete(guide = "none") +  # Remove the legend
labs(x = "Position", y = "Chromosome") +
scale_x_continuous(labels = scales::comma) +  # Display x-axis labels without scientific notation
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 10), # Increase font size of axis labels
axis.title = element_text(size = 20)) # Increase font size of axis titles
ggplot(plot_data, aes(x = midpoint, y = chromosome, color = "blue")) +
geom_segment(aes(x = start, xend = end, y = chromosome, yend = chromosome), size = 5) +
labs(x = "Position", y = "Chromosome") +
scale_x_continuous(labels = scales::comma) +  # Display x-axis labels without scientific notation
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 10), # Increase font size of axis labels
axis.title = element_text(size = 20)) # Increase font size of axis titles
ggplot(plot_data, aes(x = midpoint, y = chromosome, color = "Blue")) +
geom_segment(aes(x = start, xend = end, y = chromosome, yend = chromosome), size = 5) +
labs(x = "Position", y = "Chromosome") +
scale_x_continuous(labels = scales::comma) +  # Display x-axis labels without scientific notation
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 10), # Increase font size of axis labels
axis.title = element_text(size = 20)) # Increase font size of axis titles
ggplot(plot_data) +
geom_segment(aes(x = start, xend = end, y = chromosome, color = "blue"), size = 5) +
labs(x = "Position", y = "Chromosome") +
scale_x_continuous(labels = scales::comma) +  # Display x-axis labels without scientific notation
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 10), # Increase font size of axis labels
axis.title = element_text(size = 20)) # Increase font size of axis titles
ggplot(plot_data) +
geom_segment(aes(x = start, xend = end, y = chromosome, yend = chromosome, color = "blue"), size = 5) +
labs(x = "Position", y = "Chromosome") +
scale_x_continuous(labels = scales::comma) +  # Display x-axis labels without scientific notation
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 10), # Increase font size of axis labels
axis.title = element_text(size = 20)) # Increase font size of axis titles
library("rjson")
library(ggplot2)
library(tidyverse)
library(ggarchery)
setwd("/Users/matt/Documents/Github/dissertation_chapter_2/phylonet_hmm/visualize_tracts/glutathione_peroxidase_1/")
introgression_probabilities = fromJSON(file = "NW_022145611.1.json")
class(introgression_probabilities)
coordinates = read.table("NW_022145611.1_coordinates", header = FALSE)
coordinates = as.vector(coordinates[, 1])
#Original Start: 697300
# Create a data frame with the x and y values
data_df <- data.frame(coordinates = coordinates[697310:697757],
introgression_probabilities = introgression_probabilities[697310:697757])
ggplot(data_df, aes(x = coordinates, y = introgression_probabilities)) +
geom_line(color = "blue", linetype = "solid") +
geom_hline(yintercept = 0.9, linetype = "dashed", color = "black") + # Add the dashed line
xlab("Position on Scaffold NW_022145601.1") + ylab("Probability of Introgressed Ancestry") +
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 16), # increase font size of axis labels
axis.title = element_text(size = 20)) + # increase font size of axis titles
# Overlay rectangles and lines representing gene coordinates at the top of the plot
annotate("rect", xmin = 34800855, xmax = 34801115, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34799748, xmax = 34799818, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34798950, xmax = 34799229, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
geom_arrowsegment(aes(x = 34801230, y = 1.025, xend = 34797264, yend = 1.025), arrow_positions = 0.27, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(34797264, 34801230)), y = 1.07,
label = "glutathione peroxidase 1", color = "black", vjust = 0) +
geom_arrowsegment(aes(x = 34783707, y = 1.025, xend = 34795301, yend = 1.025), arrow_positions = 0.08, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("rect", xmin = 34783707, xmax = 34783795, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34785015, xmax = 34785201, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34785686, xmax = 34785769, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34786344, xmax = 34786547, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34787132, xmax = 34787290, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34787820, xmax = 34787978, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34789028, xmax = 34789144, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34789585, xmax = 34789731, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34790724, xmax = 34790921, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("rect", xmin = 34794422, xmax = 34795301, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 1) +
annotate("text", x = mean(c(34783707, 34795301)), y = 1.07,
label = "aarF domain containing kinase 1", color = "black", vjust = 0) +
# Add commas representing to the x axis tick marks
scale_x_continuous(labels = function(x) format(x, big.mark = ",", scientific = FALSE))
setwd("/Users/matt/Documents/Github/dissertation_chapter_2/phylonet_hmm/visualize_tracts/arachidonate_5_lipoxygenase/")
theme(plot.margin = margin(10, 50, 10, 10)) # Increase the margin at the top
introgression_probabilities = fromJSON(file = "NW_022145601.1.json")
class(introgression_probabilities)
coordinates = read.table("NW_022145601.1_coordinates", header = FALSE)
coordinates = as.vector(coordinates[, 1])
# Create a data frame with the x and y values
data_df <- data.frame(coordinates = coordinates[100:1200],
introgression_probabilities = introgression_probabilities[100:1200])
figure <- ggplot(data_df, aes(x = coordinates, y = introgression_probabilities)) +
geom_line(color = "blue", linetype = "solid") +
geom_hline(yintercept = 0.9, linetype = "dashed", color = "black") + # Add the dashed line
xlab("Position on Chromosome NW_022145601.1 (base pairs)") + ylab("Probability of Introgressed Ancestry") +
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text = element_text(size = 16), # increase font size of axis labels
axis.title = element_text(size = 20)) + # increase font size of axis titles
# Overlay rectangles and lines representing gene coordinates at the top of the plot
annotate("rect", xmin = 170756, xmax = 172402, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 175704, xmax = 175748, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 176657, xmax = 176785, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 177249, xmax = 177346, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 177643, xmax = 177775, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 178403, xmax = 178495, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 179302, xmax = 179516, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 179896, xmax = 180155, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 180545, xmax = 180645, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 181381, xmax = 181554, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 182143, xmax = 182306, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 183906, xmax = 184101, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
geom_arrowsegment(aes(x = 170401, y = 1.025, xend = 184101, yend = 1.025), arrow_positions = 0.3, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(170401, 184101)), y = 1.06,
label = "arachidonate 5-lipoxygenase", color = "black", vjust = 0) +
geom_arrowsegment(aes(x = 151263, y = 1.025, xend = 162808, yend = 1.025), arrow_positions = 0.3, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(151263, 162808)), y = 1.06,
label = "lysosomal amino acid transporter 1", color = "black", vjust = 0) +
annotate("rect", xmin = 151263, xmax = 151397, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 152335, xmax = 152661, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 153562, xmax = 153688, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 155242, xmax = 155350, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 155931, xmax = 156133, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 156698, xmax = 156784, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 157672, xmax = 157814, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 159949, xmax = 159976, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 160821, xmax = 161039, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 161457, xmax = 161648, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 162063, xmax = 162808, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
geom_arrowsegment(aes(x = 198738, y = 1.025, xend = 210294, yend = 1.025), arrow_positions = 0.33, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(198738, 210294)), y = 1.06,
label = "glycosyltransferase 8 domain-containing\nprotein 1", color = "black", vjust = 0) +
annotate("rect", xmin = 198738, xmax = 199186, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 201299, xmax = 201391, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 202975, xmax = 203176, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 203916, xmax = 204033, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 204438, xmax = 204626, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 205330, xmax = 205496, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 205792, xmax = 205904, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 206637, xmax = 210294, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
# Add commas representing to the x axis tick marks
scale_x_continuous(labels = function(x) format(x, big.mark = ",", scientific = FALSE))
figure
