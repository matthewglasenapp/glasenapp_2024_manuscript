install.packags("GenomicFeatures")
install.packages("GenomicFeatures")
install.packages("remotes")
remotes::install_github("coleoguy/evobir")
library(devtools)
install.packages("devtools")
library(devtools)
install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
results
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 300, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 300, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 300, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 100, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 50, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 50, replicate = 100, align.format='fasta')
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
30.8
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
library(devtools)
CalcD(alignment = alignment_file, sig.test = "J", ambig="R",
block.size = 1000, replicate = 1000, align.format='fasta')
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig="R",
block.size = 1000, replicate = 1000, align.format='fasta')
results
library(evobiR)
alignment_file <- "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
# Use capture.output to store the printed output in a variable
captured_output <- capture.output({
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
})
# Now the captured_output variable contains the printed output
cat(captured_output, sep = "\n")
captured_output
alignment_file = "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
# Use capture.output without assigning to results
captured_output <- capture.output({
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
})
captured_output
captured_output[1]
captured_output[2]
class(captured_output)
captured_output[3]
captured_output[4]
captured_output[5]
captured_output[6]
captured_output[7]
captured_output[8]
captured_output[9]
captured_output[10]
captured_output[11]
captured_output[11]
captured_output[12]
captured_output[13]
d <- captured_output[6]
d
sites <- captured_output[3]
captured_output[3]
captured_output
help(CalcD)
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR.00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test_spur.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/pixy_dxy/")
# 90% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_90 = "difference_distribution_90.csv"
dif_dist_90 <- read.csv(dif_dist_file_90)
dxy_dist_file_90 = "dxy_dist_90.csv"
dxy_dist_90 = read.csv(dxy_dist_file_90)
test_stat = mean(dxy_dist_90$introgression_tract) - mean(dxy_dist_90$species_tree_tract)
# Create a ggplot object with geom_density directly on the vector
dxy_90 <- ggplot() +
stat_density(aes(x = dif_dist_90$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
proportion_larger_90 <- mean(dif_dist_90 >= test_stat)
print(proportion_larger_90)
dxy_90
# 80% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_90 = "difference_distribution_80.csv"
dif_dist_90 <- read.csv(dif_dist_file_80)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/pixy_dxy/")
# 90% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_90 = "difference_distribution_90.csv"
dif_dist_90 <- read.csv(dif_dist_file_90)
dxy_dist_file_90 = "dxy_dist_90.csv"
dxy_dist_90 = read.csv(dxy_dist_file_90)
test_stat = mean(dxy_dist_90$introgression_tract) - mean(dxy_dist_90$species_tree_tract)
# Create a ggplot object with geom_density directly on the vector
dxy_90 <- ggplot() +
stat_density(aes(x = dif_dist_90$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
proportion_larger_90 <- mean(dif_dist_90 >= test_stat)
print(proportion_larger_90)
dxy_90
1/100000
