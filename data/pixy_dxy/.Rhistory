setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/phylonet_hmm/output_visualizations/tract_length_dist/")
library(ggplot2)
dist_90_file = read.csv("tract_dist_90.csv",header=F)
dist_80_file = read.csv("tract_dist_80.csv",header=F)
dist_90 = unlist(dist_90_file)
dist_80 = unlist(dist_80_file)
options(scipen = 999)
figure1 <- ggplot() +
aes(dist_90) +
geom_histogram(binwidth=10000, colour="black", fill="light blue") +
xlab("Length (bases)") +
ylab("Number of Introgression Tracts") +
theme(axis.title.x = element_text(size=14, face="bold")) +
theme(axis.title.y = element_text(size=14, face="bold")) +
theme(axis.text.x= element_text(size=12)) +
theme(axis.text.y= element_text(size=12)) +
theme(axis.line = element_line(colour = "black", size = 1)) +
scale_x_continuous(n.breaks = 6, labels = scales::comma, expand = expansion(mult = c(0, .05))) +
scale_y_continuous(expand = expansion(mult = c(0, .03))) +
theme(panel.background = element_blank()) +
stat_bin(binwidth = 10000, aes(y=..count.., label=ifelse(..count..==0,"",..count..)), geom="text", vjust = -.5)
figure1
ggsave(filename = "tract_dist_80.svg", plot = figure)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/phylonet_hmm/output_visualizations/tract_length_dist/")
dist_90_file = read.csv("tract_dist_90.csv",header=F)
dist_80_file = read.csv("tract_dist_80.csv",header=F)
dist_90 = unlist(dist_90_file)
dist_80 = unlist(dist_80_file)
options(scipen = 999)
# Create a combined data frame with reordered levels
combined_data <- data.frame(
value = c(dist_90, dist_80),
group = rep(c("dist_90", "dist_80"), times = c(length(dist_90), length(dist_80)))
)
# Modify the levels of the group variable
combined_data$group <- factor(
combined_data$group,
levels = c("dist_90", "dist_80"),
labels = c("Posterior Probability > 90%", "Posterior Probability > 80%")
)
# Create a histogram with facet_wrap
figure2 <- ggplot(data = combined_data, aes(x = value)) +
geom_histogram(binwidth = 10000, colour = "black", fill = "light blue") +
labs(x = "Length (bases)", y = "Number of Introgression Tracts") +
scale_x_continuous(n.breaks = 6, labels = scales::comma, expand = expansion(mult = c(0.005, .05))) +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
theme(
panel.background = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size = 16),  # Adjust font size for all text elements
axis.title = element_text(size = 18),  # Adjust font size for axis titles
strip.text = element_text(size = 18),  # Adjust font size for facet labels
) +
stat_bin(binwidth = 10000, aes(y = ..count.., label = ifelse(..count.. == 0, "", ..count..)), geom = "text", vjust = -0.5) +
facet_wrap(~ group, ncol = 1, strip.position = "top", scales = "free_y")  # Stacked facets in one
figure2
library(ggplot2)
library(viridisLite)
library(svglite)
library(dplyr)
setwd("/Users/matt/Documents/Github/glasenapp_2024_manuscript/data/phylonet_hmm/output_visualizations/tracts_by_scaffold/")
# Read data from CSV file
gene_density_data <- read.csv("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/gene_density/chromosome_window_density.csv", header = FALSE, col.names = c("chromosome", "start", "end", "gene_density"))
# Create a data frame for plotting
df_gene_density <- gene_density_data %>%
mutate(chromosome = factor(chromosome, levels = unique(chromosome)))
# Calculate window centers
df_gene_density$window_center <- (df_gene_density$start + df_gene_density$end) / 2
mytheme <- theme_classic() + theme(
legend.position = "top",
axis.line = element_line(color = "black", size = 1.5),
axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1),
text = element_text(size = 10, face = "bold", color = "black")
)
theme_set(mytheme)
# Read the bed file
#bed_file <- "ten_kb_tracts_80.bed"
bed_file <- "ten_kb_tracts.bed"
genes <- read.table(bed_file, sep = "\t", header = FALSE)
# Rename the columns
colnames(genes) <- c("chromosome", "start", "end", "gene_name")
# Read the gaps file
gap_file <- "100kb_gaps.bed"
gaps <- read.table(gap_file, sep = "\t", header = FALSE)
colnames(gaps) <- c("chromosome", "start", "end", "name")
# Read the scaffold lengths file
scaffold_lengths <- read.table("scaffold_info.txt", sep = "\t", header = FALSE)
# Rename the columns
colnames(scaffold_lengths) <- c("chromosome", "length", "gene_density")
# Order scaffold_lengths by gene_density in descending order
scaffold_lengths <- scaffold_lengths[order(scaffold_lengths$gene_density),]
scaffold_lengths$chromosome <- factor(scaffold_lengths$chromosome, levels = scaffold_lengths$chromosome)
# Create a new column in genes dataframe to represent the order of chromosomes
genes$order <- match(genes$chromosome, scaffold_lengths$chromosome)
# Sort genes by the order of chromosomes
genes <- genes[order(genes$order),]
# Remove the 'order' column if no longer needed
genes$order <- NULL
# Create a data frame for plotting
plot_data <- data.frame(
chromosome = factor(genes$chromosome, levels = scaffold_lengths$chromosome),
start = genes$start,
end = genes$end
)
# Create the plot
figure <- ggplot(plot_data) +
geom_blank(data = scaffold_lengths, aes(x = 0, y = chromosome)) +
geom_tile(data = df_gene_density, aes(x = window_center, y = chromosome, fill = gene_density),
width = df_gene_density$end - df_gene_density$start + 1, height = 0.2) +
geom_segment(
aes(x = start, xend = end, y = chromosome, yend = chromosome),
color = "black", linewidth = 5
) +
labs(x = "Position along Scaffold (base pairs)", y = "Scaffold") +
scale_x_continuous(labels = scales::comma) +
scale_fill_viridis_c(name = "Gene Density", option = "rocket") +
theme(
panel.background = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black", linewidth = 0.5),
axis.text = element_text(size = 8),
axis.title = element_text(size = 16),
legend.position = "inside",
legend.justification = "right",
#legend.key.size = unit(0.5, "cm"),
)
figure
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/pixy_dxy/")
# 90% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_90 = "difference_distribution_90.csv"
dif_dist_90 <- read.csv(dif_dist_file_90)
dxy_dist_file_90 = "dxy_dist_90.csv"
dxy_dist_90 = read.csv(dxy_dist_file_90)
test_stat = mean(dxy_dist_90$introgression_tract) - mean(dxy_dist_90$species_tree_tract)
# Create a ggplot object with geom_density directly on the vector
dxy_90 <- ggplot() +
stat_density(aes(x = dif_dist_90$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
proportion_larger_90 <- mean(dif_dist_90 >= test_stat)
print(proportion_larger_90)
dxy_90
# 80% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_90 = "difference_distribution_80.csv"
dif_dist_90 <- read.csv(dif_dist_file_80)
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_80 = "difference_distribution_80.csv"
dif_dist_80 <- read.csv(dif_dist_file_80)
dxy_dist_file_80 = "dxy_dist_80.csv"
dxy_dist_80 = read.csv(dxy_dist_file_80)
test_stat = mean(dxy_dist_80$introgression_tract) - mean(dxy_dist_80$species_tree_tract)
# Create a ggplot object with geom_density directly on the vector
dxy_90 <- ggplot() +
stat_density(aes(x = dif_dist_80$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
dxy_80 <- ggplot() +
stat_density(aes(x = dif_dist_80$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
dxy_80
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/pixy_dxy/")
# 90% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_90 = "difference_distribution_90.csv"
dif_dist_90 <- read.csv(dif_dist_file_90)
dxy_dist_file_90 = "dxy_dist_90.csv"
dxy_dist_90 = read.csv(dxy_dist_file_90)
test_stat = mean(dxy_dist_90$introgression_tract) - mean(dxy_dist_90$species_tree_tract)
# Create a ggplot object with geom_density directly on the vector
dxy_90 <- ggplot() +
stat_density(aes(x = dif_dist_90$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
proportion_larger_90 <- mean(dif_dist_90 >= test_stat)
print(proportion_larger_90)
dxy_90
# 80% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_80 = "difference_distribution_80.csv"
dif_dist_80 <- read.csv(dif_dist_file_80)
dxy_dist_file_80 = "dxy_dist_80.csv"
dxy_dist_80 = read.csv(dxy_dist_file_80)
test_stat = mean(dxy_dist_80$introgression_tract) - mean(dxy_dist_80$species_tree_tract)
# Create a ggplot object with geom_density directly on the vector
dxy_80 <- ggplot() +
stat_density(aes(x = dif_dist_80$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
dxy_80
View(dif_dist_80)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/pixy_dxy/")
# 80% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_80 = "difference_distribution_80.csv"
dif_dist_80 <- read.csv(dif_dist_file_80)
View(dif_dist_80)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/pixy_dxy/")
# 90% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_90 = "difference_distribution_90.csv"
dif_dist_90 <- read.csv(dif_dist_file_90)
dxy_dist_file_90 = "dxy_dist_90.csv"
dxy_dist_90 = read.csv(dxy_dist_file_90)
test_stat = mean(dxy_dist_90$introgression_tract) - mean(dxy_dist_90$species_tree_tract)
# Create a ggplot object with geom_density directly on the vector
dxy_90 <- ggplot() +
stat_density(aes(x = dif_dist_90$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
proportion_larger_90 <- mean(dif_dist_90 >= test_stat)
print(proportion_larger_90)
dxy_90
# 80% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dif_dist_file_80 = "difference_distribution_80.csv"
dif_dist_80 <- read.csv(dif_dist_file_80)
dxy_dist_file_80 = "dxy_dist_80.csv"
dxy_dist_80 = read.csv(dxy_dist_file_80)
test_stat = mean(dxy_dist_80$introgression_tract) - mean(dxy_dist_80$species_tree_tract)
# Create a ggplot object with geom_density directly on the vector
dxy_80 <- ggplot() +
stat_density(aes(x = dif_dist_80$dxy),geom="line", position="identity", linewidth = 1.1, color = "#1F78B4") +
geom_vline(xintercept = test_stat, linetype = "dashed", color = "darkred", size = 0.7) +
labs(x = "Difference in Means",
y = "Probability Density") +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09)))
dxy_80
dxy_90
proportion_larger_80 <- mean(dif_dist_80 >= test_stat)
print(proportion_larger_80)
library(ggplot2)
library(tidyr)
library(dplyr)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/pixy_dxy/")
# 90% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dxy_dist_file_90 = "dxy_dist_90.csv"
dxy_dist_90 = read.csv(dxy_dist_file_90)
num_items = length(dxy_dist_90$introgression_tract)
df_dxy_90 <- pivot_longer(dxy_dist_90, cols = c(introgression_tract, species_tree_tract), names_to = "dist_type", values_to = "divergence")
df_dxy_90 <- df_dxy_90 %>% arrange(dist_type)
mean_values <- aggregate(divergence ~ dist_type, df_dxy_90, mean)
dxy_90 <- ggplot(data = df_dxy_90, aes(x = divergence, color = dist_type)) +
stat_density(geom="line",position="identity", size = 1.1) +
geom_vline(data = mean_values, aes(xintercept = divergence, linetype = dist_type, color = dist_type),
linetype = "dashed", size = 0.7, show.legend = FALSE) +
geom_text(data = mean_values, aes(x = divergence, label = round(divergence, 3), y = 0.0, color = dist_type), vjust = 0.0, hjust = -0.1, show.legend = FALSE, size = 2.5) +
scale_color_manual(values = c("introgression_tract" = "#1F78B4", "species_tree_tract" = "#333333"),
labels = c("introgression_tract" = "Introgression Tracts", "species_tree_tract" = "Genome-Wide Background")) +
labs(
x = "Absolute Nucleotide Divergence (dXY)",
y = "Probability Density",
color = "Dist Type"
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 10)
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09))) +
guides(color = guide_legend(title = NULL))
# Display the plot
ggsave(filename = "/Users/matt/Desktop/figure_3.pdf", plot = dxy_90)
# 80% posterior probability threshold
#-------------------------------------------------------------------------------
# Load the csv files containing the distribution of mean dXY values and read as a one-dimensional vector
dxy_dist_file_80 = "dxy_dist_80.csv"
dxy_dist_80 = read.csv(dxy_dist_file_80)
num_items = length(dxy_dist_80$introgression_tract)
df_dxy_80 <- pivot_longer(dxy_dist_80, cols = c(introgression_tract, species_tree_tract), names_to = "dist_type", values_to = "divergence")
df_dxy_80 <- df_dxy_80 %>% arrange(dist_type)
df_dxy_80_filtered <- df_dxy_80 %>%
group_by(dist_type) %>%
mutate(z_score = scale(divergence)) %>%
filter(abs(z_score) < 4) %>%
ungroup() %>%
select(dist_type, divergence)
mean_values <- aggregate(divergence ~ dist_type, df_dxy_80, mean)
dxy_80 <- ggplot(data = df_dxy_80_filtered, aes(x = divergence, color = dist_type)) +
stat_density(geom="line",position="identity", size = 1.1) +
geom_vline(data = mean_values, aes(xintercept = divergence, linetype = dist_type, color = dist_type),
linetype = "dashed", size = 0.7, show.legend = FALSE) +
geom_text(data = mean_values, aes(x = divergence, label = round(divergence, 3), y = 0.0, color = dist_type), vjust = 0.0, hjust = -0.1, show.legend = FALSE, size = 2.5) +
scale_color_manual(values = c("introgression_tract" = "#1F78B4", "species_tree_tract" = "#333333"),
labels = c("introgression_tract" = "Introgression Tracts", "species_tree_tract" = "Genome-Wide Background")) +
labs(
x = "Absolute Nucleotide Divergence (dXY)",
y = "Probability Density",
color = "Dist Type"
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 10),
axis.line = element_line(color = "black", linewidth = 0.5),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 10)
) +
scale_x_continuous(expand = expansion(mult = c(0.09, 0.09))) +
guides(color = guide_legend(title = NULL))
dxy_80
mean(df_dxy_90$divergence[df_dxy_90$dist_type == "introgression_tract"])
model1 <- lm(df_dxy_90$divergence[df_dxy_90$dist_type == "species_tree_tract"] ~ 1)
confint(model1, level=0.95)
mean(df_dxy_80$divergence[df_dxy_80$dist_type == "introgression_tract"])
model1 <- lm(df_dxy_80$divergence[df_dxy_80$dist_type == "species_tree_tract"] ~ 1)
confint(model1, level=0.95)
dxy_90
