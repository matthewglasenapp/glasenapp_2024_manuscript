install.packags("GenomicFeatures")
install.packages("GenomicFeatures")
install.packages("remotes")
remotes::install_github("coleoguy/evobir")
library(devtools)
install.packages("devtools")
library(devtools)
install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
results
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 300, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 300, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 300, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 100, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 50, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 50, replicate = 100, align.format='fasta')
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
30.8
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
library(devtools)
CalcD(alignment = alignment_file, sig.test = "J", ambig="R",
block.size = 1000, replicate = 1000, align.format='fasta')
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig="R",
block.size = 1000, replicate = 1000, align.format='fasta')
results
library(evobiR)
alignment_file <- "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
# Use capture.output to store the printed output in a variable
captured_output <- capture.output({
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
})
# Now the captured_output variable contains the printed output
cat(captured_output, sep = "\n")
captured_output
alignment_file = "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
# Use capture.output without assigning to results
captured_output <- capture.output({
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
})
captured_output
captured_output[1]
captured_output[2]
class(captured_output)
captured_output[3]
captured_output[4]
captured_output[5]
captured_output[6]
captured_output[7]
captured_output[8]
captured_output[9]
captured_output[10]
captured_output[11]
captured_output[11]
captured_output[12]
captured_output[13]
d <- captured_output[6]
d
sites <- captured_output[3]
captured_output[3]
captured_output
help(CalcD)
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR.00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test_spur.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggh4x)
library(scales)
setwd("/Users/matt/Documents/Github/dissertation_chapter_2/data/paml/")
introgression_tract_dN_90 = "mean_dN_introgression_tract_90.csv"
species_tree_tract_dN_90 = "mean_dN_species_tree_90.csv"
introgression_tract_dS_90 = "mean_dS_introgression_tract_90.csv"
species_tree_tract_dS_90 = "mean_dS_species_tree_90.csv"
introgression_tract_dNdS_90 = "mean_dNdS_introgression_tract_90.csv"
species_tree_tract_dNdS_90 = "mean_dNdS_species_tree_90.csv"
introgression_tract_dN_80 = "mean_dN_introgression_tract_80.csv"
species_tree_tract_dN_80 = "mean_dN_species_tree_80.csv"
introgression_tract_dS_80 = "mean_dS_introgression_tract_80.csv"
species_tree_tract_dS_80 = "mean_dS_species_tree_80.csv"
introgression_tract_dNdS_80 = "mean_dNdS_introgression_tract_80.csv"
species_tree_tract_dNdS_80 = "mean_dNdS_species_tree_80.csv"
setwd("/Users/matt/Documents/Github/glasenapp_2024_manuscript/data/paml/")
introgression_tract_dN_90 = "mean_dN_introgression_tract_90.csv"
species_tree_tract_dN_90 = "mean_dN_species_tree_90.csv"
introgression_tract_dS_90 = "mean_dS_introgression_tract_90.csv"
species_tree_tract_dS_90 = "mean_dS_species_tree_90.csv"
introgression_tract_dNdS_90 = "mean_dNdS_introgression_tract_90.csv"
species_tree_tract_dNdS_90 = "mean_dNdS_species_tree_90.csv"
introgression_tract_dN_80 = "mean_dN_introgression_tract_80.csv"
species_tree_tract_dN_80 = "mean_dN_species_tree_80.csv"
introgression_tract_dS_80 = "mean_dS_introgression_tract_80.csv"
species_tree_tract_dS_80 = "mean_dS_species_tree_80.csv"
introgression_tract_dNdS_80 = "mean_dNdS_introgression_tract_80.csv"
species_tree_tract_dNdS_80 = "mean_dNdS_species_tree_80.csv"
dist_dN_introgression_tract_90 <- scan(introgression_tract_dN_90, what = numeric(), sep = ",")
dist_dN_species_tree_90 <- scan(species_tree_tract_dN_90, what = numeric(), sep = ",")
dist_dS_introgression_tract_90 <- scan(introgression_tract_dS_90, what = numeric(), sep = ",")
dist_dS_species_tree_90 <- scan(species_tree_tract_dS_90, what = numeric(), sep = ",")
dist_dNdS_introgression_tract_90 <- scan(introgression_tract_dNdS_90, what = numeric(), sep = ",")
dist_dNdS_species_tree_90 <- scan(species_tree_tract_dNdS_90, what = numeric(), sep = ",")
dist_dN_introgression_tract_80 <- scan(introgression_tract_dN_80, what = numeric(), sep = ",")
dist_dN_species_tree_80 <- scan(species_tree_tract_dN_80, what = numeric(), sep = ",")
dist_dS_introgression_tract_80 <- scan(introgression_tract_dS_80, what = numeric(), sep = ",")
dist_dS_species_tree_80 <- scan(species_tree_tract_dS_80, what = numeric(), sep = ",")
dist_dNdS_introgression_tract_80 <- scan(introgression_tract_dNdS_80, what = numeric(), sep = ",")
dist_dNdS_species_tree_80 <- scan(species_tree_tract_dNdS_80, what = numeric(), sep = ",")
df <- data.frame(
dist_type = factor(c(rep("introgression_tract", 1000), rep("species_tree_tract", 1000), rep("introgression_tract", 1000), rep("species_tree_tract", 1000))),
mean_dN = c(dist_dN_introgression_tract_90, dist_dN_species_tree_90, dist_dN_introgression_tract_80, dist_dN_species_tree_80),
mean_dS = c(dist_dS_introgression_tract_90, dist_dS_species_tree_90, dist_dS_introgression_tract_80, dist_dS_species_tree_80),
mean_dNdS = c(dist_dNdS_introgression_tract_90, dist_dNdS_species_tree_90, dist_dNdS_introgression_tract_80, dist_dNdS_species_tree_80),
posterior_probability = factor(c(rep("probability_90", 2000), rep("probability_80", 2000)))
)
# Convert data to long format
df_long <- df %>% pivot_longer(cols = c(mean_dN, mean_dS, mean_dNdS),
names_to = "metric",
values_to = "value")
# Reorder the levels of the metric variable
df_long$metric <- factor(df_long$metric, levels = c("mean_dN", "mean_dS", "mean_dNdS"))
df_long$posterior_probability <- factor(df_long$posterior_probability, levels = c("probability_90", "probability_80"))
fig1 <- ggplot(df_long, aes(x = value, fill = dist_type)) +
geom_density(aes(y=after_stat(density)), alpha=0.8) +
facet_grid2(
posterior_probability ~ metric,
scales = "free", independent = "all",
labeller = labeller(posterior_probability = c(
"probability_90" = "90% threshold",
"probability_80" = "80% threshold"),
metric = c(
mean_dN = "Mean dN",
mean_dS = "Mean dS",
mean_dNdS = "Mean dNdS"
)
), switch = "x") +
scale_fill_manual(values = c("introgression_tract" = "#A6CEE3", "species_tree_tract" = "#999999"),
labels = c("Introgression Tract", "Genome-Wide Background")) +
labs(x = "", y = "Probability Density", fill = "") +
theme_bw() +
theme(strip.placement = "outside",
axis.title = element_text(size = 20),
legend.position = "top",
panel.grid = element_blank(),
strip.text.y = element_text(size = 14, angle = 270),
strip.text.x = element_text(size = 18), # Font size for facet labels
legend.text = element_text(size = 16),
axis.text = element_text(size = 8)
) +
guides(fill = guide_legend(title = NULL))
fig1
knitr::opts_chunk$set(echo = TRUE)
library(sjPlot)
library(fitdistrplus)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(fitdistrplus)
library(knitr)
library(tidyr)
library(ggh4x)
library(scales)
