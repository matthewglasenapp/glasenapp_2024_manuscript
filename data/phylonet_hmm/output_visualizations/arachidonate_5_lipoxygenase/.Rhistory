install.packags("GenomicFeatures")
install.packages("GenomicFeatures")
install.packages("remotes")
remotes::install_github("coleoguy/evobir")
library(devtools)
install.packages("devtools")
library(devtools)
install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
results
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 300, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 300, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 300, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 100, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 50, replicate = 1000, align.format='fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 50, replicate = 100, align.format='fasta')
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
30.8
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
alignment_file = "/Users/matt/Desktop/test.fa"
CalcD(alignment = alignment_file, sig.test = "J", ambig="D",
block.size = 1000, replicate = 1000, align.format='fasta')
#alignment_file = "/Users/matt/Documents/GitHub/bindin_ebr1/matt_data/EBR1/EBR1_concatenated_exons/EBR1_filtered.fas"
alignment_file = "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
library(devtools)
CalcD(alignment = alignment_file, sig.test = "J", ambig="R",
block.size = 1000, replicate = 1000, align.format='fasta')
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig="R",
block.size = 1000, replicate = 1000, align.format='fasta')
results
library(evobiR)
alignment_file <- "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
# Use capture.output to store the printed output in a variable
captured_output <- capture.output({
results <- CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
})
# Now the captured_output variable contains the printed output
cat(captured_output, sep = "\n")
captured_output
alignment_file = "/Users/matt/Desktop/d_stat/mfra_hpul_sdro_sfra.fa"
# Use capture.output without assigning to results
captured_output <- capture.output({
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
})
captured_output
captured_output[1]
captured_output[2]
class(captured_output)
captured_output[3]
captured_output[4]
captured_output[5]
captured_output[6]
captured_output[7]
captured_output[8]
captured_output[9]
captured_output[10]
captured_output[11]
captured_output[11]
captured_output[12]
captured_output[13]
d <- captured_output[6]
d
sites <- captured_output[3]
captured_output[3]
captured_output
help(CalcD)
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR.00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test_spur.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/ebr1_full_gene_SPUR_00,QB3KMK014,QB3KMK016,QB3KMK010.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Documents/Github/urchin_grp/abba_baba/temp/test.fas"
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
CalcD(alignment = alignment_file, sig.test = "J", ambig = "R",
block.size = 1000, replicate = 1000, align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
library(devtools)
#install_github('coleoguy/evobir', build_vignettes=T)
library(evobiR)
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
alignment_file = "/Users/matt/Desktop/test.fas"
# Use capture.output without assigning to results
CalcD(alignment = alignment_file, sig.test = "N", ambig = "R", align.format = 'fasta')
library(rjson)
library(ggplot2)
library(tidyverse)
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/phylonet_hmm/output_visualizations/tract_length_dist/")
library(ggplot2)
dist_90_file = read.csv("tract_dist_90.csv",header=F)
dist_80_file = read.csv("tract_dist_80.csv",header=F)
dist_90 = unlist(dist_90_file)
dist_80 = unlist(dist_80_file)
options(scipen = 999)
figure1 <- ggplot() +
aes(dist_90) +
geom_histogram(binwidth=10000, colour="black", fill="light blue") +
xlab("Length (bases)") +
ylab("Number of Introgression Tracts") +
theme(axis.title.x = element_text(size=14, face="bold")) +
theme(axis.title.y = element_text(size=14, face="bold")) +
theme(axis.text.x= element_text(size=12)) +
theme(axis.text.y= element_text(size=12)) +
theme(axis.line = element_line(colour = "black", size = 1)) +
scale_x_continuous(n.breaks = 6, labels = scales::comma, expand = expansion(mult = c(0, .05))) +
scale_y_continuous(expand = expansion(mult = c(0, .03))) +
theme(panel.background = element_blank()) +
stat_bin(binwidth = 10000, aes(y=..count.., label=ifelse(..count..==0,"",..count..)), geom="text", vjust = -.5)
figure1
ggsave(filename = "tract_dist_80.svg", plot = figure)
setwd("/Users/matt/Documents/GitHub/glasenapp_2024_manuscript/data/phylonet_hmm/output_visualizations/tract_length_dist/")
dist_90_file = read.csv("tract_dist_90.csv",header=F)
dist_80_file = read.csv("tract_dist_80.csv",header=F)
dist_90 = unlist(dist_90_file)
dist_80 = unlist(dist_80_file)
options(scipen = 999)
# Create a combined data frame with reordered levels
combined_data <- data.frame(
value = c(dist_90, dist_80),
group = rep(c("dist_90", "dist_80"), times = c(length(dist_90), length(dist_80)))
)
# Modify the levels of the group variable
combined_data$group <- factor(
combined_data$group,
levels = c("dist_90", "dist_80"),
labels = c("Posterior Probability > 90%", "Posterior Probability > 80%")
)
# Create a histogram with facet_wrap
figure2 <- ggplot(data = combined_data, aes(x = value)) +
geom_histogram(binwidth = 10000, colour = "black", fill = "light blue") +
labs(x = "Length (bases)", y = "Number of Introgression Tracts") +
scale_x_continuous(n.breaks = 6, labels = scales::comma, expand = expansion(mult = c(0.005, .05))) +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
theme(
panel.background = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size = 16),  # Adjust font size for all text elements
axis.title = element_text(size = 18),  # Adjust font size for axis titles
strip.text = element_text(size = 18),  # Adjust font size for facet labels
) +
stat_bin(binwidth = 10000, aes(y = ..count.., label = ifelse(..count.. == 0, "", ..count..)), geom = "text", vjust = -0.5) +
facet_wrap(~ group, ncol = 1, strip.position = "top", scales = "free_y")  # Stacked facets in one
figure2
ggsave(filename = "/Users/matt/Desktop/tract_length_dist.pdf", plot = figure2, width=169, units = "mm")
library(rjson)
library(ggplot2)
library(tidyverse)
#library(ggarchery)
setwd("/Users/matt/Documents/Github/dissertation_chapter_2/data/phylonet_hmm/output_visualizations/arachidonate_5_lipoxygenase/")
library(rjson)
library(ggplot2)
library(tidyverse)
#library(ggarchery)
setwd("/Users/matt/Documents/Github/glasenapp_2024_manuscript/data/phylonet_hmm/output_visualizations/arachidonate_5_lipoxygenase/")
introgression_probabilities = fromJSON(file = "NW_022145601.1.json")
class(introgression_probabilities)
coordinates = read.table("NW_022145601.1_coordinates", header = FALSE)
library(rjson)
library(ggplot2)
library(tidyverse)
#library(ggarchery)
setwd("/Users/matt/Documents/Github/glasenapp_2024_manuscript/data/phylonet_hmm/output_visualizations/arachidonate_5_lipoxygenase/")
introgression_probabilities = fromJSON(file = "NW_022145601.1.json")
class(introgression_probabilities)
coordinates = read.table("NW_022145601.1_coordinates.txt", header = FALSE)
coordinates = as.vector(coordinates[, 1])
# Create a data frame with the x and y values
data_df <- data.frame(coordinates = coordinates[100:1200],
introgression_probabilities = introgression_probabilities[100:1200])
figure <- ggplot(data_df, aes(x = coordinates, y = introgression_probabilities)) +
geom_line(color = "blue", linetype = "solid") +
geom_hline(yintercept = 0.9, linetype = "dashed", color = "black") + # Add the dashed line
xlab("Position on Chromosome NW_022145601.1 (base pairs)") + ylab("Probability of Introgressed Ancestry") +
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 20, face = "bold")) +
coord_cartesian(ylim = c(0, 1.08)) +
# Overlay rectangles and lines representing gene coordinates at the top of the plot
annotate("rect", xmin = 170756, xmax = 172402, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 175704, xmax = 175748, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 176657, xmax = 176785, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 177249, xmax = 177346, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 177643, xmax = 177775, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 178403, xmax = 178495, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 179302, xmax = 179516, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 179896, xmax = 180155, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 180545, xmax = 180645, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 181381, xmax = 181554, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 182143, xmax = 182306, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 183906, xmax = 184101, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
geom_arrowsegment(aes(x = 170401, y = 1.025, xend = 184101, yend = 1.025), arrow_positions = 0.3, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(170401, 184101)), y = 1.06,
label = "arachidonate\n5-lipoxygenase", color = "black", vjust = 0) +
geom_arrowsegment(aes(x = 151263, y = 1.025, xend = 162808, yend = 1.025), arrow_positions = 0.3, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(151263, 162808)), y = 1.06,
label = "lysosomal amino acid\ntransporter 1", color = "black", vjust = 0) +
annotate("rect", xmin = 151263, xmax = 151397, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 152335, xmax = 152661, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 153562, xmax = 153688, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 155242, xmax = 155350, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 155931, xmax = 156133, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 156698, xmax = 156784, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 157672, xmax = 157814, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 159949, xmax = 159976, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 160821, xmax = 161039, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 161457, xmax = 161648, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 162063, xmax = 162808, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
geom_arrowsegment(aes(x = 198738, y = 1.025, xend = 210294, yend = 1.025), arrow_positions = 0.33, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(198738, 210294)), y = 1.06,
label = "glycosyltransferase 8\ndomain-containing protein 1", color = "black", vjust = 0) +
annotate("rect", xmin = 198738, xmax = 199186, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 201299, xmax = 201391, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 202975, xmax = 203176, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 203916, xmax = 204033, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 204438, xmax = 204626, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 205330, xmax = 205496, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 205792, xmax = 205904, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 206637, xmax = 210294, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
# Add commas representing to the x axis tick marks
scale_x_continuous(labels = function(x) format(x, big.mark = ",", scientific = FALSE)) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0))
install.packages("ggarchery")
library(rjson)
library(ggplot2)
library(tidyverse)
library(ggarchery)
setwd("/Users/matt/Documents/Github/glasenapp_2024_manuscript/data/phylonet_hmm/output_visualizations/arachidonate_5_lipoxygenase/")
introgression_probabilities = fromJSON(file = "NW_022145601.1.json")
class(introgression_probabilities)
coordinates = read.table("NW_022145601.1_coordinates.txt", header = FALSE)
coordinates = as.vector(coordinates[, 1])
# Create a data frame with the x and y values
data_df <- data.frame(coordinates = coordinates[100:1200],
introgression_probabilities = introgression_probabilities[100:1200])
figure <- ggplot(data_df, aes(x = coordinates, y = introgression_probabilities)) +
geom_line(color = "blue", linetype = "solid") +
geom_hline(yintercept = 0.9, linetype = "dashed", color = "black") + # Add the dashed line
xlab("Position on Chromosome NW_022145601.1 (base pairs)") + ylab("Probability of Introgressed Ancestry") +
# Remove the background from the theme
theme(panel.background = element_blank()) +
# Add lines representing the X and Y Axes
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 20, face = "bold")) +
coord_cartesian(ylim = c(0, 1.08)) +
# Overlay rectangles and lines representing gene coordinates at the top of the plot
annotate("rect", xmin = 170756, xmax = 172402, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 175704, xmax = 175748, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 176657, xmax = 176785, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 177249, xmax = 177346, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 177643, xmax = 177775, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 178403, xmax = 178495, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 179302, xmax = 179516, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 179896, xmax = 180155, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 180545, xmax = 180645, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 181381, xmax = 181554, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 182143, xmax = 182306, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 183906, xmax = 184101, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
geom_arrowsegment(aes(x = 170401, y = 1.025, xend = 184101, yend = 1.025), arrow_positions = 0.3, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(170401, 184101)), y = 1.06,
label = "arachidonate\n5-lipoxygenase", color = "black", vjust = 0) +
geom_arrowsegment(aes(x = 151263, y = 1.025, xend = 162808, yend = 1.025), arrow_positions = 0.3, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(151263, 162808)), y = 1.06,
label = "lysosomal amino acid\ntransporter 1", color = "black", vjust = 0) +
annotate("rect", xmin = 151263, xmax = 151397, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 152335, xmax = 152661, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 153562, xmax = 153688, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 155242, xmax = 155350, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 155931, xmax = 156133, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 156698, xmax = 156784, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 157672, xmax = 157814, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 159949, xmax = 159976, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 160821, xmax = 161039, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 161457, xmax = 161648, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 162063, xmax = 162808, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
geom_arrowsegment(aes(x = 198738, y = 1.025, xend = 210294, yend = 1.025), arrow_positions = 0.33, arrows = arrow(length=unit(.35, 'cm'), ends = "last", type = "closed")) +
annotate("text", x = mean(c(198738, 210294)), y = 1.06,
label = "glycosyltransferase 8\ndomain-containing protein 1", color = "black", vjust = 0) +
annotate("rect", xmin = 198738, xmax = 199186, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 201299, xmax = 201391, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 202975, xmax = 203176, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 203916, xmax = 204033, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 204438, xmax = 204626, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 205330, xmax = 205496, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 205792, xmax = 205904, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
annotate("rect", xmin = 206637, xmax = 210294, ymin = 1.00, ymax = 1.05,
fill = "black", color = "black", size = 0.5) +
# Add commas representing to the x axis tick marks
scale_x_continuous(labels = function(x) format(x, big.mark = ",", scientific = FALSE)) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0))
figure
ggsave(filename="/Users/matt/Desktop/figure_5.pdf",plot=figure)
ggsave(filename="/Users/matt/Desktop/figure_5.pdf",plot=figure, height = 8.5)
ggsave(filename="/Users/matt/Desktop/figure_5.pdf",plot=figure, width = 11, height = 8.5)
